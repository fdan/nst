#! /opt/Foundry/Nuke12.2v1/libnuke-12.2.1.so -nx
version 12.2 v1
Gizmo {
 inputs 8
 addUserKnob {20 Lookdev}
 addUserKnob {22 setup T "import nuke\nimport nst.nuke.gizmo\nreload(nst.nuke.gizmo)\n\nnode = nuke.thisNode()\nnst.nuke.gizmo.setup(node)" +STARTLINE}
 addUserKnob {6 allow_update l "allow update" -STARTLINE}
 allow_update true
 addUserKnob {3 epochs_l l epochs}
 epochs_l 500
 addUserKnob {3 log_epochs l "log epochs"}
 log_epochs 20
 addUserKnob {4 optimiser_l l optimiser M {Adam L-BFGS "" ""}}
 optimiser_l L-BFGS
 addUserKnob {4 engine_l l engine M {CPU GPU ""}}
 engine_l GPU
 addUserKnob {7 scale_l l scale}
 scale_l 0.7
 addUserKnob {7 learning_rate R 0 10}
 learning_rate 1
 addUserKnob {26 ""}
 addUserKnob {1 style_layers l "style layers"}
 style_layers "p1, p2, r31, r42"
 addUserKnob {1 style_layer_weights l "style layer weights"}
 style_layer_weights "1.0, 1.0, 1.0, 1.0"
 addUserKnob {3 style_mips l "style mips"}
 style_mips 5
 addUserKnob {1 style_mip_weights l "style mip weights"}
 style_mip_weights "1.0, 1.0, 1.0, 1.0, 1.0"
 addUserKnob {16 mip_scale_factor l "mip scale factor"}
 mip_scale_factor 0.63
 addUserKnob {26 ""}
 addUserKnob {1 content_layer l "content layer"}
 content_layer r41
 addUserKnob {3 content_mips l "content mips"}
 content_mips 1
 addUserKnob {7 content_layer_weight l "content layer weight"}
 content_layer_weight 1
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {20 Farm}
 addUserKnob {2 output_file l "output file"}
 output_file /mnt/ala/research/danielf/2022/nuke_nst/tmp/v007/nst.exr
 addUserKnob {4 engine_f l engine M {CPU GPU ""}}
 addUserKnob {4 optimiser_f l optimiser M {Adam L-BFGS "" "" ""}}
 optimiser_f L-BFGS
 addUserKnob {1 frames}
 frames 1-100x10
 addUserKnob {7 scale_f l scale}
 scale_f 1
 addUserKnob {7 learning_rate_f l "learning rate" R 0 20}
 learning_rate_f 1
 addUserKnob {3 epochs_f l epochs}
 epochs_f 500
 addUserKnob {26 ""}
 addUserKnob {1 service_key l "service key"}
 service_key starfish
 addUserKnob {1 job_name l "job name"}
 job_name nuke_nst_v007
 addUserKnob {1 tier}
 tier default
 addUserKnob {3 atmost}
 atmost 56
 addUserKnob {26 ""}
 addUserKnob {6 checkpoint +STARTLINE}
 addUserKnob {3 checkpoint_interval l every -STARTLINE}
 addUserKnob {26 frames_1 l frames -STARTLINE}
 addUserKnob {6 output_gradients l "output gradients" +STARTLINE}
 addUserKnob {6 output_style_pyraids l "output style pyramids" +STARTLINE}
 addUserKnob {6 output_style_activations l "output style activations" +STARTLINE}
 addUserKnob {6 output_gram l "output gram" +STARTLINE}
 addUserKnob {6 output_content_activations l "output content acvications" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {22 send_to_farm l "send to farm" T "from nst.farm import tr\nreload(tr)\n\ntr.nuke_submit(nuke.thisNode())" +STARTLINE}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 endGroup n -1}
}
 Input {
  inputs 0
  name style3_target
  xpos 730
  ypos -78
  number 7
 }
 Write {
  file "\[python \{'/'.join(nuke.thisParent().knob(\"output_file\").value().split('/')\[:-1:]) + \"/tmp/style3_target.exr\"\}]"
  raw true
  create_directories true
  checkHashOnRead false
  name Write8
  xpos 730
  ypos 16
 }
 Input {
  inputs 0
  name style3
  xpos 620
  ypos -78
  number 6
 }
 Write {
  channels rgba
  file "\[python \{'/'.join(nuke.thisParent().knob(\"output_file\").value().split('/')\[:-1:]) + \"/tmp/style3.exr\"\}]"
  raw true
  create_directories true
  name Write6
  xpos 620
  ypos 16
 }
set N2c2a6400 [stack 0]
 Input {
  inputs 0
  name style2_target
  xpos 510
  ypos -78
  number 5
 }
 Write {
  file "\[python \{'/'.join(nuke.thisParent().knob(\"output_file\").value().split('/')\[:-1:]) + \"/tmp/style2_target.exr\"\}]"
  raw true
  create_directories true
  checkHashOnRead false
  name Write7
  xpos 510
  ypos 16
 }
 Input {
  inputs 0
  name style2
  xpos 400
  ypos -78
  number 4
 }
 Write {
  channels rgba
  file "\[python \{'/'.join(nuke.thisParent().knob(\"output_file\").value().split('/')\[:-1:]) + \"/tmp/style2.exr\"\}]"
  raw true
  create_directories true
  name Write5
  xpos 400
  ypos 16
 }
 Input {
  inputs 0
  name style1_target
  xpos 290
  ypos -78
  number 3
 }
 Write {
  file "\[python \{'/'.join(nuke.thisParent().knob(\"output_file\").value().split('/')\[:-1:]) + \"/tmp/style1_target.exr\"\}]"
  raw true
  create_directories true
  checkHashOnRead false
  name Write4
  xpos 290
  ypos 16
 }
 Input {
  inputs 0
  name style1
  xpos 169
  ypos -77
  number 2
 }
 Write {
  channels rgba
  file "\[python \{'/'.join(nuke.thisParent().knob(\"output_file\").value().split('/')\[:-1:]) + \"/tmp/style1.exr\"\}]"
  colorspace scene_linear
  raw true
  create_directories true
  name Write3
  xpos 169
  ypos 15
 }
 Input {
  inputs 0
  name opt
  xpos 48
  ypos -77
  number 1
 }
 Write {
  file "\[python \{'/'.join(nuke.thisParent().knob(\"output_file\").value().split('/')\[:-1:]) + \"/tmp/opt.####.exr\"\}]"
  raw true
  create_directories true
  name Write2
  xpos 48
  ypos 16
 }
 Input {
  inputs 0
  name content
  xpos -59
  ypos -76
 }
 Write {
  file "\[python \{'/'.join(nuke.thisParent().knob(\"output_file\").value().split('/')\[:-1:]) + \"/tmp/content.####.exr\"\}]"
  proxy "\[Group1.scale]"
  raw true
  create_directories true
  render_order 0.7
  name Write1
  xpos -59
  ypos 17
 }
 MLClient {
  inputs 8
  host 172.22.15.27
  port 55555
  models {{1} "Gaussian Blur" "Neural Style Transfer"}
  serialiseKnob {model:Neural Style Transfer;style_mips:{"\[python \{nuke.thisNode().parent()\['style_mips'].getValue()\}]"};content_mips:{"\[python \{nuke.thisNode().parent()\['content_mips'].getValue()\}]"};iterations:{"\[python \{nuke.thisNode().parent()\['epochs_l'].getValue()\}]"};log_iterations:{"\[python \{int(nuke.thisNode().parent()\['log_epochs'].getValue())\}]"};enable_update:{"\[python \{int(nuke.thisNode().parent()\['allow_update'].getValue())\}]"};farm_iterations:{"\[python \{nuke.thisNode().parent()\['epochs_f'].getValue()\}]"};pyramid_scale_factor:{"\[python \{nuke.thisNode().parent()\['mip_scale_factor'].getValue()\}]"};learning_rate:{"\[python \{nuke.thisNode().parent()\['learning_rate'].getValue()\}]"};scale:{"\[python \{nuke.thisNode().parent()\['scale_l'].getValue()\}]"};farm_scale:{"\[python \{nuke.thisNode().parent()\['scale_f'].getValue()\}]"};engine:[python {nuke.thisNode().parent()['engine_l'].value().lower()}];optimiser:[python {nuke.thisNode().parent()['optimiser_l'].value().lower()}];style_layers:[python {nuke.thisNode().parent()['style_layers'].getValue()}];style_layer_weights:[python {nuke.thisNode().parent()['style_layer_weights'].getValue()}];style_mip_weights:[python {nuke.thisNode().parent()['style_mip_weights'].getValue()}];content_layer:[python {nuke.thisNode().parent()['content_layer'].getValue()}];content_layer_weight:[python {nuke.thisNode().parent()['content_layer_weight'].getValue()}];farm_engine:[python {nuke.thisNode().parent()['engine_f'].value().lower()}];farm_optimiser:[python {nuke.thisNode().parent()['optimiser_f'].value().lower().replace('-', '')}];farm_learning_rate:[python {nuke.thisNode().parent()['learning_rate_f'].value()}];content_fp:[python {nuke.thisNode().input(0).knob('file').getEvaluatedValue()}];opt_fp:[python {nuke.thisNode().input(1).knob('file').getEvaluatedValue()}];out_fp:[python {nuke.thisNode().parent().dependent()[0].knob('file').getEvaluatedValue()}];style1_fp:[python {nuke.thisNode().input(2).knob('file').getEvaluatedValue()}];style1_target_fp:[python {nuke.thisNode().input(3).knob('file').getEvaluatedValue()}];style2_fp:[python {nuke.thisNode().input(4).knob('file').getEvaluatedValue()}];style2_target_fp:[python {nuke.thisNode().input(5).knob('file').getEvaluatedValue()}];style3_fp:[python {nuke.thisNode().input(6).knob('file').getEvaluatedValue()}];style3_target_fp:[python {nuke.thisNode().input(7).knob('file').getEvaluatedValue()}];}
  name MLClient1
  xpos 349
  ypos 183
 }
 Output {
  name Output1
  xpos 349
  ypos 273
 }
push $N2c2a6400
 Viewer {
  frame_range 1-100
  name Viewer1
  xpos 600
  ypos 150
 }
end_group
