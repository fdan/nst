#! /usr/bin/env python

from optparse import OptionParser

import nst
import nst.farm

def main():

    p = OptionParser()
    p.add_option("-c", "--content", dest='content', action='store')
    p.add_option("-s", "--style", dest='style', action='store')
    p.add_option("", "--style-layers", dest='style_layers', action='store')
    p.add_option("-o", "--output-dir", dest='output_dir', action='store')
    p.add_option("", "--render-name", dest='render_name', action='store')
    p.add_option("-i", "--iterations", dest='iterations', action='store')
    p.add_option("-l", "--loss", dest='loss', action='store')
    p.add_option("-e", "--engine", dest="engine", action='store', default='gpu')
    p.add_option("-f", "--farm", dest="farm", action='store_true')
    p.add_option("-u", "--unsafe", dest="unsafe", action='store_true')
    p.add_option("-r", "--random", dest="random_style", action='store_true')
    p.add_option("", "--progressive", dest="progressive", action='store_true')


    opts, args = p.parse_args()

    # print [int(x) for x in opts.style_layers.split(',')]
    # return

    if opts.iterations and opts.loss:
        print('iterations and max_loss cannot both be specified')
        return

    if not opts.output_dir:
        print("no output was specified")
        return

    if len(opts.output_dir.split('.')) > 1:
        print("output_dir should not contain extensions")
        return

    if not opts.farm:
        nst.doit(opts)

    if opts.farm:
        nst.farm.doit(opts)


if __name__ == "__main__":
    main()